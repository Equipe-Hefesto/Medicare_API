    

                DateTime dtAtual = p.DataInicio;
                var intervaloHoras = TimeSpan.FromHours(int.Parse(p.Intervalo));
                List<string> horariosLista = new List<string>();

                while (dtAtual <= p.DataInicio.Date.AddDays(1).AddHours(8))
                {
                    horariosLista.Add(TimeOnly.FromDateTime(dtAtual).ToString());
                    dtAtual = dtAtual.Add(intervaloHoras);
                }



                // Associa os horários à posologia
                foreach (var horario in horariosLista)
                {
                    var hora = TimeOnly.Parse(horario);

                    bool jaExiste = await _context.Horarios.AnyAsync(h => h.IdPosologia == p.IdPosologia && h.Hora == hora);

                    if (!jaExiste)
                    {
                        var h = new Horario();
                        h.Hora = TimeOnly.Parse(horario);
                        h.IdPosologia = p.IdPosologia;
                        h.Posologia = p;

                        _context.Horarios.Add(h);
                        await _context.SaveChangesAsync();
                    }
                }


                /* var horarios = await _context.Horarios.Where(h => h.IdPosologia == p.IdPosologia).ToListAsync();
                   var ultimoIdAlarme = await _context.Alarmes.OrderByDescending(a => a.IdAlarme).Select(a => a.IdAlarme).FirstOrDefaultAsync();

                   // aqui você guarda o próximo id a ser usado
                   var proximoIdAlarme = ultimoIdAlarme + 1;

                   DateTime dataAtual = p.DataInicio;
                   DateTime dataFim = p.DataFim != default ? p.DataFim : DateTime.Now.AddMonths(1);

                   while (dataAtual <= dataFim)
                   {   

                       foreach (var horario in horarios)
                       {
                           var dataHora = dataAtual.Date.Add(horario.Hora.ToTimeSpan());  // Atribui a hora do alarme

                           var a = new Alarme();
                           a.IdAlarme = proximoIdAlarme++; // Incrementa a cada novo alarme
                           a.IdPosologia = p.IdPosologia;
                           a.Descricao = $"Tomar {p.Quantidade} {p.IdTipoFarmaceutico} de {p.QuantidadeDose} {p.IdTipoGrandeza} de {GetNomeRemedio(p.IdRemedio)}";
                           a.DataHora = dataHora;
                           a.Status = "A";
                           a.Posologia = p;

                           _context.Alarmes.Add(a);
                       }

                       dataAtual = dataAtual.AddDays(1);
                   }*/

                /*var horarios = await _context.Horarios.Where(h => h.IdPosologia == p.IdPosologia).ToListAsync();
                 var ultimoIdAlarme = await _context.Alarmes.OrderByDescending(a => a.IdAlarme).Select(a => a.IdAlarme).FirstOrDefaultAsync();

                 // aqui você guarda o próximo id a ser usado
                 var proximoIdAlarme = ultimoIdAlarme + 1;

                 DateTime dataAtual = p.DataInicio;
                 DateTime dataFim = p.DataFim != default ? p.DataFim : DateTime.Now.AddMonths(1);

                 while (dataAtual <= dataFim)
                 {
                     for (int i = 0; i < p.DiasUso; i++)
                     {
                         foreach (var horario in horarios)
                         {
                             var dataHora = dataAtual.Date.Add(horario.Hora.ToTimeSpan());  // Atribui a hora do alarme

                             var a = new Alarme();
                             a.IdAlarme = proximoIdAlarme++; // Incrementa a cada novo alarme
                             a.IdPosologia = p.IdPosologia;
                             a.Descricao = $"Tomar {p.Quantidade} {p.IdTipoFarmaceutico} de {p.QuantidadeDose} {p.IdTipoGrandeza} de {GetNomeRemedio(p.IdRemedio)}";
                             a.DataHora = dataHora;
                             a.Status = "A";
                             a.Posologia = p;

                             _context.Alarmes.Add(a);
                         }

                         dataAtual = dataAtual.AddDays(1);
                     }
                     for (int i = 0; i < p.DiasPausa; i++)
                     {
                         dataAtual = dataAtual.AddDays(1);

                     }

                 }*/

                // pega a lista de dias da semana em int


                var horarios = await _context.Horarios.Where(h => h.IdPosologia == p.IdPosologia).ToListAsync();
                var ultimoIdAlarme = await _context.Alarmes.OrderByDescending(a => a.IdAlarme).Select(a => a.IdAlarme).FirstOrDefaultAsync();

                // aqui você guarda o próximo id a ser usado
                var proximoIdAlarme = ultimoIdAlarme + 1;

                DateTime dataAtual = p.DataInicio;
                DateTime dataFim = p.DataFim != default ? p.DataFim : DateTime.Now.AddMonths(1);
               

                List<string> diasSelecionados = new List<string> { "seg", "qua", "sex" };

                List<DayOfWeek> diasEnum = diasSelecionados
                    .Select(dia => mapDias[dia])
                    .ToList();
                while (dataAtual <= dataFim)
                {
                    int numeroDia = (int)dataAtual.DayOfWeek;
                    if (DiasSemana.Contains(numeroDia))
                    {
                        foreach (var horario in horarios)
                        {
                            var dataHora = dataAtual.Date.Add(horario.Hora.ToTimeSpan());  // Atribui a hora do alarme

                            var a = new Alarme();
                            a.IdAlarme = proximoIdAlarme++; // Incrementa a cada novo alarme
                            a.IdPosologia = p.IdPosologia;
                            a.Descricao = $"Tomar {p.Quantidade} {GetTipoFarmaceutico{p.IdTipoFarmaceutico}} de {p.QuantidadeDose} {GetTipoGrandeza{p.IdTipoGrandeza}} de {GetNomeRemedio(p.IdRemedio)}";
                            a.DataHora = dataHora;
                            a.Status = "A";
                            a.Posologia = p;

                            _context.Alarmes.Add(a);
                        }

                        dataAtual = dataAtual.AddDays(1);
                    }
                    else
                    {
                        dataAtual = dataAtual.AddDays(1);

                    }

                }